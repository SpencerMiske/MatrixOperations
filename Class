class matrix:
  grid = []


  def __init__(self, vis):
    temp = []
    text = vis.split(" ")
    
    for i in text:
      if i == "/":
        self.grid.append(temp)
        temp = []
      else:
        temp.append(int(i))
  
  #assuming valid multiplication
  def dot(x, y):
    z = []
    for i in range(len(x.grid)): #2
      v = []
      for u in range(len(y.grid[0])): #3
        sum = 0
        for o in range(len(y.grid)):
          sum += x.grid[i][o]*y.grid[o][u]
        v.append(sum)
      z.append(v)
    return z
  
    def transpose(x):
      T = []
      for i in range(len(x.grid[0])):
        temp = []
        for u in range(len(x.grid)):
          temp.append(x.grid[u][i])
        T.append(temp)
      return T
